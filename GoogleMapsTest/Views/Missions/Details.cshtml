@model GoogleMapsTest.Models.Mission

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Mission</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MissionStatus)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MissionStatus)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.velocity_range)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.velocity_range)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.idle_velocity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.idle_velocity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.action_on_finish)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.action_on_finish)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.mission_exec_times)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.mission_exec_times)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.yaw_mode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.yaw_mode)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.trace_mode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.trace_mode)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.action_on_rc_lost)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.action_on_rc_lost)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.gimbal_pitch_mode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.gimbal_pitch_mode)
        </dd>*@

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.MissionPK }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<div style='overflow:hidden;height:440px;width:700px;'>
    <div id='gmap_canvas' style='height:440px;width:700px;'></div>
    <div>
        <small><a href="http://embedgooglemaps.com">									embed google maps							</a></small>
    </div>
    <div><small><a href="http://www.proxysitereviews.com/instantproxies">instantproxies</a></small></div>
    <style>
        #gmap_canvas img {
            max-width: none !important;
            background: none !important;
        }
    </style>
</div>


<script type='text/javascript'>
    var increment = 1;
    var myOptions = { zoom: 13, center: new google.maps.LatLng(44.786568, 20.44892159999995), mapTypeId: google.maps.MapTypeId.SATELLITE };
    map = new google.maps.Map(document.getElementById('gmap_canvas'), myOptions);
    var poly = new google.maps.Polyline({ map: map, path: [], strokeColor: "#FF0000", strokeOpacity: 1.0, strokeWeight: 2 });
    function init_map() {
        var model = @Html.Raw(Json.Encode(ViewBag.FlightPoints));
        var index = 1;
        for(i = 0; i<model.length; i++){
            var lat = model[i].Latitude;
            var lng = model[i].Lognitude;
            var heig = model[i].Height;
            var act = model[i].Action;
            marker = new google.maps.Marker({ map: map, position: new google.maps.LatLng(lat, lng) });
            newLocation = new google.maps.LatLng(lat, lng);
            marker.setPosition(newLocation);
            infowindow = new google.maps.InfoWindow({ content: '<strong>ID:'+index+++'</strong><br>Height:'+heig+'<br>'+act+'<br>' });
            google.maps.event.addListener(marker, 'click', function () { infowindow.open(map, marker); });
            infowindow.open(map, marker);
        }
        var PolyModel = @Html.Raw(Json.Encode(ViewBag.PolygonPoints));
        if(PolyModel.length>0)
        {
            for(i = 0; i<PolyModel.length; i++){
                var lat = PolyModel[i].Latitude;
                var lng = PolyModel[i].Lognitude;
                poly.getPath().push(new google.maps.LatLng(lat, lng));
            }
            poly.getPath().push(poly.getPath().getAt(0)); //connect first and last point
            poly.setMap(map);
        }
    } google.maps.event.addDomListener(window, 'load', init_map);
</script>

